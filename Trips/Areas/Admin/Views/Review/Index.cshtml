@model ReviewIndexVM
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Review Management";
}

<!-- Header -->
<div class="review-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1><i class="fas fa-star me-3"></i>Review Management</h1>
                <p class="lead mb-0">Manage all reviews in the system</p>
            </div>
            <div class="col-md-6 text-end">
                <div class="btn-group">
                    <a href="~/Admin/Review/Index" class="btn btn-outline-light"><i class="fas fa-sync-alt me-2"></i>Refresh</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Stats and Search -->
    <div class="row">
        <div class="col-md-9">
            <div class="stats-card">
                <div class="row">
                    <div class="col-md-3 text-center border-end">
                        <h3 class="text-primary">@Model.TotalCount</h3>
                        <p class="text-muted mb-0">Total Reviews</p>
                    </div>
                    <div class="col-md-3 text-center border-end">
                        <h3 class="text-success">@Model.Reviews.Count(r => r.Rating >= 4)</h3>
                        <p class="text-muted mb-0">Positive Reviews (4+ stars)</p>
                    </div>
                    <div class="col-md-3 text-center border-end">
                        <h3 class="text-warning">@Model.Reviews.Count(r => r.Rating == 3)</h3>
                        <p class="text-muted mb-0">Neutral Reviews (3 stars)</p>
                    </div>
                    <div class="col-md-3 text-center">
                        <h3 class="text-danger">@Model.Reviews.Count(r => r.Rating <= 2)</h3>
                        <p class="text-muted mb-0">Negative Reviews (1-2 stars)</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="search-container text-center">
                <form asp-action="Index" method="get" class="input-group">
                    <input type="text" name="search" class="form-control"
                           placeholder="Search reviews..." value="@Model.Search" />
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- Review Cards -->
    <div class="row">
        @foreach (var review in Model.Reviews)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card review-card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">@review.Trip?.Title</h5>
                        <div class="rating-stars">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                            }
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- User Information -->
                        <div class="d-flex align-items-center mb-3">
                            <div class="user-avatar bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px;">
                                <i class="fas fa-user"></i>
                            </div>
                            <div>
                                <h6 class="mb-0">@review.User?.UserName</h6>
                                <small class="text-muted">@review.CreatedAt.ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>

                        <!-- Rating Display -->
                        <div class="rating-display mb-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="fw-bold">Rating:</span>
                                <span class="badge @GetRatingBadgeClass(review.Rating)">@review.Rating / 5</span>
                            </div>
                            <div class="progress mt-1" style="height: 6px;">
                                <div class="progress-bar @GetRatingProgressBarClass(review.Rating)"
                                     style="width: @(review.Rating * 20)%"
                                     role="progressbar"
                                     aria-valuenow="@review.Rating"
                                     aria-valuemin="1"
                                     aria-valuemax="5">
                                </div>
                            </div>
                        </div>

                        <!-- Comment -->
                        <div class="comment-section">
                            <h6 class="text-muted mb-2">Comment:</h6>
                            @if (!string.IsNullOrEmpty(review.Comment))
                            {
                                <div class="comment-text bg-light p-3 rounded">
                                    <p class="mb-0">@review.Comment</p>
                                </div>
                            }
                            else
                            {
                                <div class="text-muted text-center p-2 bg-light rounded">
                                    <i class="fas fa-comment-slash me-2"></i>No comment provided
                                </div>
                            }
                        </div>

                        <!-- Trip Information -->
                        <div class="trip-info mt-3 pt-3 border-top">
                            <div class="row">
                                <div class="col-12">
                                    <h6 class="text-muted mb-2">Trip Details:</h6>
                                    <div class="d-flex justify-content-between">
                                        <small><i class="fas fa-route me-1 text-primary"></i> @review.Trip?.Title</small>
                                        <small><i class="fas fa-calendar me-1 text-primary"></i> @review.CreatedAt.ToString("MMM yyyy")</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-white border-0 pt-0">
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <!-- Edit Button -->
                            <a asp-area="Admin" asp-controller="Review" asp-action="Edit"
                               asp-route-id="@review.Id" asp-route-page="@Model.CurrentPage" asp-route-search="@Model.Search"
                               class="btn btn-outline-primary action-btn">
                                <i class="fas fa-edit"></i> Edit
                            </a>

                            <!-- Delete Button -->
                            <button class="btn btn-outline-danger action-btn delete-btn"
                                    data-id="@review.Id"
                                    data-name="review from @review.User?.UserName for @review.Trip?.Title"
                                    data-page="@Model.CurrentPage"
                                    data-search="@Model.Search"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteModal">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- No Results Message -->
    @if (!Model.Reviews.Any())
    {
        <div class="row">
            <div class="col-12 text-center py-5">
                <i class="fas fa-star fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">No reviews found</h4>
                <p class="text-muted">Try adjusting your search criteria</p>
                <a asp-action="Index" class="btn btn-primary mt-2">
                    <i class="fas fa-sync-alt me-2"></i>Reset Search
                </a>
            </div>
        </div>
    }

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="row pagination-container">
            <div class="col-12">
                <nav aria-label="Review pagination">
                    <ul class="pagination justify-content-center">

                        <!-- Previous Button -->
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-page="@(Model.CurrentPage - 1)"
                               asp-route-search="@Model.Search">
                                Previous
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link"
                                   asp-action="Index"
                                   asp-route-page="@i"
                                   asp-route-search="@Model.Search">
                                    @i
                                </a>
                            </li>
                        }

                        <!-- Next Button -->
                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-page="@(Model.CurrentPage + 1)"
                               asp-route-search="@Model.Search">
                                Next
                            </a>
                        </li>

                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <p>Are you sure you want to delete the review <strong id="reviewName"></strong>?</p>
                <p class="text-danger small">This action cannot be undone.</p>
            </div>

            <div class="modal-footer">
                <form id="deleteForm" method="post" asp-action="Delete">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteId" />
                    <input type="hidden" name="page" id="deletePage" />
                    <input type="hidden" name="search" id="deleteSearch" />

                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Error Notification -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show alert-notification" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Success Notification -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show alert-notification" role="alert">
        <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@functions {
    public string GetRatingBadgeClass(int rating)
    {
        return rating switch
        {
            >= 4 => "bg-success",
            3 => "bg-warning",
            <= 2 => "bg-danger",
            
        };
    }

    public string GetRatingProgressBarClass(int rating)
    {
        return rating switch
        {
            >= 4 => "bg-success",
            3 => "bg-warning",
            <= 2 => "bg-danger",
            
        };
    }
}

<style>
    .review-header {
        background: linear-gradient(135deg, #ffc107 0%, #ff9800 100%);
        color: white;
        padding: 1.5rem 0;
        margin-bottom: 2rem;
        border-radius: 0 0 10px 10px;
    }

    .review-card {
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s, box-shadow 0.3s;
        height: 100%;
        border: none;
    }

        .review-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        background: linear-gradient(135deg, #ff9800 0%, #ffc107 100%);
        color: white;
        border-radius: 10px 10px 0 0 !important;
        padding: 1rem 1.5rem;
    }

    .rating-stars {
        font-size: 1.1rem;
    }

    .user-avatar {
        font-size: 1.2rem;
    }

    .comment-text {
        max-height: 120px;
        overflow-y: auto;
        font-size: 0.9rem;
        line-height: 1.4;
    }

    .action-btn {
        margin: 0 3px;
        border-radius: 5px;
        font-weight: 500;
        font-size: 0.8rem;
        padding: 0.25rem 0.5rem;
    }

    .pagination-container {
        margin-top: 2rem;
    }

    .modal-header {
        border-radius: 10px 10px 0 0;
    }

    .stats-card {
        background: white;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
    }

    .search-container {
        background: white;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
    }

    .alert-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1050;
        animation: fadeIn 0.5s, fadeOut 0.5s 2.5s;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        border: none;
        border-radius: 8px;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
            transform: translateY(0);
        }

        to {
            opacity: 0;
            transform: translateY(-20px);
        }
    }

    .modal-backdrop {
        z-index: 1040 !important;
    }

    .modal {
        z-index: 1060 !important;
    }

    .rating-display .badge {
        font-size: 0.8rem;
        padding: 0.35em 0.65em;
    }

    .trip-info {
        font-size: 0.85rem;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Delete Modal functionality
        const deleteModal = document.getElementById("deleteModal");
        deleteModal.addEventListener("show.bs.modal", function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute("data-id");
            const name = button.getAttribute("data-name");
            const page = button.getAttribute("data-page");
            const search = button.getAttribute("data-search");

            document.getElementById("deleteId").value = id;
            document.getElementById("deletePage").value = page;
            document.getElementById("deleteSearch").value = search;
            document.getElementById("reviewName").textContent = name;
        });

        // Auto-hide alerts
        var alerts = document.querySelectorAll('.alert');
        alerts.forEach(function(alert) {
            setTimeout(function () {
                var bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            }, 5000);
        });

        // Expand long comments on click
        const commentTexts = document.querySelectorAll('.comment-text');
        commentTexts.forEach(function(comment) {
            comment.addEventListener('click', function() {
                if (this.style.maxHeight) {
                    this.style.maxHeight = null;
                } else {
                    this.style.maxHeight = 'none';
                }
            });
        });
    });
</script>