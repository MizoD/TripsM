@model BookingIndexVM
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Booking Management";
}

<!-- Header -->
<div class="booking-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1><i class="fas fa-ticket-alt me-3"></i>Booking Management</h1>
                <p class="lead mb-0">Manage all bookings in the system</p>
            </div>
            <div class="col-md-6 text-end">
                <div class="btn-group">
                    <a href="~/Admin/Booking/Create" class="btn btn-outline-light"><i class="fas fa-plus me-2"></i>Add New Booking</a>
                    <a href="~/Admin/Booking/Index" class="btn btn-outline-light"><i class="fas fa-sync-alt me-2"></i>Refresh</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Stats and Search -->
    <div class="row">
        <div class="col-md-9">
            <div class="stats-card">
                <div class="row">
                    <div class="col-md-3 text-center border-end">
                        <h3 class="text-primary">@Model.TotalCount</h3>
                        <p class="text-muted mb-0">Total Bookings</p>
                    </div>
                    <div class="col-md-3 text-center border-end">
                        <h3 class="text-success">@Model.Bookings.Count(b => b.Status == BookingStatus.Paid)</h3>
                        <p class="text-muted mb-0">Paid Bookings</p>
                    </div>
                    <div class="col-md-3 text-center border-end">
                        <h3 class="text-warning">@Model.Bookings.Count(b => b.Status == BookingStatus.Pending)</h3>
                        <p class="text-muted mb-0">Pending Bookings</p>
                    </div>
                    <div class="col-md-3 text-center">
                        <h3 class="text-danger">@Model.Bookings.Count(b => b.Status == BookingStatus.Cancelled || b.Status == BookingStatus.Failed)</h3>
                        <p class="text-muted mb-0">Cancelled/Failed</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="search-container text-center">
                <form asp-action="Index" method="get" class="input-group">
                    <input type="text" name="search" class="form-control"
                           placeholder="Search bookings..." value="@Model.Search" />
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- Booking Cards -->
    <div class="row">
        @foreach (var booking in Model.Bookings)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card booking-card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Booking #@booking.Id</h5>
                        @{
                            var statusClass = "bg-secondary";
                            switch (booking.Status)
                            {
                                case BookingStatus.Paid:
                                    statusClass = "bg-success";
                                    break;
                                case BookingStatus.Pending:
                                    statusClass = "bg-warning";
                                    break;
                                case BookingStatus.Failed:
                                case BookingStatus.Cancelled:
                                    statusClass = "bg-danger";
                                    break;
                                case BookingStatus.Refunded:
                                    statusClass = "bg-info";
                                    break;
                            }
                        }
                        <span class="badge @statusClass">@booking.Status</span>
                    </div>
                    <div class="card-body">
                        <p class="card-text"><i class="fas fa-user me-2 text-primary"></i><strong>User:</strong> @(booking.User?.UserName ?? "N/A")</p>
                        <p class="card-text"><i class="fas fa-calendar me-2 text-primary"></i><strong>Booking Date:</strong> @booking.BookingDate.ToString("MMM dd, yyyy")</p>
                        <p class="card-text"><i class="fas fa-dollar-sign me-2 text-primary"></i><strong>Amount:</strong> @booking.TotalAmount.ToString("C")</p>

                        @if (booking.Trip != null)
                        {
                            <p class="card-text"><i class="fas fa-route me-2 text-primary"></i><strong>Trip:</strong> @booking.Trip.Title</p>
                        }

                        @if (booking.Flight != null)
                        {
                            <p class="card-text"><i class="fas fa-plane me-2 text-primary"></i><strong>Flight:</strong> @booking.Flight.Title</p>
                        }

                        @if (booking.Hotel != null)
                        {
                            <p class="card-text"><i class="fas fa-hotel me-2 text-primary"></i><strong>Hotel:</strong> @booking.Hotel.Name</p>
                        }

                        <p class="card-text"><i class="fas fa-ticket-alt me-2 text-primary"></i><strong>Tickets:</strong> @booking.Tickets</p>
                        <p class="card-text"><i class="fas fa-credit-card me-2 text-primary"></i><strong>Payment:</strong> @booking.PaymentMethod</p>
                    </div>
                    <div class="card-footer bg-white border-0 pt-0">
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <!-- Status Change Button -->
                            <form asp-action="Status" asp-route-id="@booking.Id" asp-route-page="@Model.CurrentPage" asp-route-search="@Model.Search" method="post" class="d-inline">
                                @if (booking.Status == BookingStatus.Pending || booking.Status == BookingStatus.Failed)
                                {
                                    <button type="submit" class="btn btn-outline-success action-btn" name="newStatus" value="Paid">
                                        <i class="fas fa-check"></i> Mark Paid
                                    </button>
                                }
                                @if (booking.Status == BookingStatus.Paid)
                                {
                                    <button type="submit" class="btn btn-outline-warning action-btn" name="newStatus" value="Refunded">
                                        <i class="fas fa-undo"></i> Refund
                                    </button>
                                }
                                @if (booking.Status != BookingStatus.Cancelled && booking.Status != BookingStatus.Refunded)
                                {
                                    <button type="submit" class="btn btn-outline-danger action-btn" name="newStatus" value="Cancelled">
                                        <i class="fas fa-times"></i> Cancel
                                    </button>
                                }
                            </form>

                            <!-- Edit Button -->
                            <a asp-area="Admin" asp-controller="Booking" asp-action="Edit"
                               asp-route-id="@booking.Id" asp-route-page="@Model.CurrentPage" asp-route-search="@Model.Search"
                               class="btn btn-outline-primary action-btn">
                                <i class="fas fa-edit"></i> Edit
                            </a>

                            <!-- Delete Button -->
                            <button class="btn btn-outline-danger action-btn delete-btn"
                                    data-id="@booking.Id"
                                    data-name="Booking #@booking.Id"
                                    data-page="@Model.CurrentPage"
                                    data-search="@Model.Search"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteModal">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="row pagination-container">
            <div class="col-12">
                <nav aria-label="Booking pagination">
                    <ul class="pagination justify-content-center">

                        <!-- Previous Button -->
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-page="@(Model.CurrentPage - 1)"
                               asp-route-search="@Model.Search">
                                Previous
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link"
                                   asp-action="Index"
                                   asp-route-page="@i"
                                   asp-route-search="@Model.Search">
                                    @i
                                </a>
                            </li>
                        }

                        <!-- Next Button -->
                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-page="@(Model.CurrentPage + 1)"
                               asp-route-search="@Model.Search">
                                Next
                            </a>
                        </li>

                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <p>Are you sure you want to delete <strong id="bookingName"></strong>?</p>
                <p class="text-danger small">This action cannot be undone.</p>
            </div>

            <div class="modal-footer">
                <form id="deleteForm" method="post" asp-action="Delete">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteId" />
                    <input type="hidden" name="page" id="deletePage" />
                    <input type="hidden" name="search" id="deleteSearch" />

                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Status Change Modal -->
<div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="statusModalLabel">
                    <i class="fas fa-exchange-alt me-2"></i> Change Booking Status
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Change status of <strong id="statusBookingName"></strong> to:</p>
                <select class="form-select" id="statusSelect">
                    <option value="Pending">Pending</option>
                    <option value="Paid">Paid</option>
                    <option value="Failed">Failed</option>
                    <option value="Cancelled">Cancelled</option>
                    <option value="Refunded">Refunded</option>
                </select>
            </div>
            <div class="modal-footer">
                <form id="statusForm" method="post" asp-action="Status">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="statusId" />
                    <input type="hidden" name="newStatus" id="statusValue" />
                    <input type="hidden" name="page" id="statusPage" />
                    <input type="hidden" name="search" id="statusSearch" />

                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-warning">
                        <i class="fas fa-sync-alt me-2"></i>Update Status
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Error Notification -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show alert-notification" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Success Notification -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show alert-notification" role="alert">
        <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<style>
    .booking-header {
        background: linear-gradient(135deg, #0d47a1 0%, #1976d2 100%);
        color: white;
        padding: 1.5rem 0;
        margin-bottom: 2rem;
        border-radius: 0 0 10px 10px;
    }

    .booking-card {
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s, box-shadow 0.3s;
        height: 100%;
        border: none;
    }

        .booking-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        background: linear-gradient(135deg, #1976d2 0%, #0d47a1 100%);
        color: white;
        border-radius: 10px 10px 0 0 !important;
        padding: 1rem 1.5rem;
    }

    .action-btn {
        margin: 0 3px;
        border-radius: 5px;
        font-weight: 500;
        font-size: 0.8rem;
        padding: 0.25rem 0.5rem;
    }

    .pagination-container {
        margin-top: 2rem;
    }

    .modal-header {
        border-radius: 10px 10px 0 0;
    }

    .stats-card {
        background: white;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
    }

    .search-container {
        background: white;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
    }

    .alert-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1050;
        animation: fadeIn 0.5s, fadeOut 0.5s 2.5s;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        border: none;
        border-radius: 8px;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
            transform: translateY(0);
        }

        to {
            opacity: 0;
            transform: translateY(-20px);
        }
    }

    .modal-backdrop {
        z-index: 1040 !important;
    }

    .modal {
        z-index: 1060 !important;
    }

    .status-badge {
        font-size: 0.8rem;
        padding: 0.35em 0.65em;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Delete Modal functionality
        const deleteModal = document.getElementById("deleteModal");
        deleteModal.addEventListener("show.bs.modal", function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute("data-id");
            const name = button.getAttribute("data-name");
            const page = button.getAttribute("data-page");
            const search = button.getAttribute("data-search");

            document.getElementById("deleteId").value = id;
            document.getElementById("deletePage").value = page;
            document.getElementById("deleteSearch").value = search;
            document.getElementById("bookingName").textContent = name;
        });

        // Status Modal functionality
        const statusModal = document.getElementById("statusModal");
        statusModal.addEventListener("show.bs.modal", function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute("data-id");
            const name = button.getAttribute("data-name");
            const page = button.getAttribute("data-page");
            const search = button.getAttribute("data-search");
            const currentStatus = button.getAttribute("data-status");

            document.getElementById("statusId").value = id;
            document.getElementById("statusPage").value = page;
            document.getElementById("statusSearch").value = search;
            document.getElementById("statusBookingName").textContent = name;

            const statusSelect = document.getElementById("statusSelect");
            statusSelect.value = currentStatus;
        });

        // Update status value before form submission
        document.getElementById("statusForm").addEventListener("submit", function() {
            document.getElementById("statusValue").value = document.getElementById("statusSelect").value;
        });

        // Auto-hide alerts
        var alerts = document.querySelectorAll('.alert');
        alerts.forEach(function(alert) {
            setTimeout(function () {
                var bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            }, 5000);
        });
    });
</script>