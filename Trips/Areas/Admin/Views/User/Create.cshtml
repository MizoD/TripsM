@model ApplicationUser
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Create a User";
}

<!-- Header -->
<div class="dashboard-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1><i class="fas fa-user-plus me-3"></i>Create New User</h1>
                <p class="lead mb-0">Add a new user to the system</p>
            </div>
            <div class="col-md-6 text-end">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" class="btn btn-outline-light"><i class="fas fa-arrow-left me-2"></i>Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Create Form -->
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="form-container">
                <div class="form-header">
                    <h4 class="mb-0"><i class="fas fa-info-circle me-2"></i>User Details</h4>
                </div>

                <form asp-action="Create" method="post">
                    @Html.AntiForgeryToken()

                    <!-- Validation Summary -->
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>
                            @Html.ValidationSummary(false, "", new { @class = "mb-0" })
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="FirstName" class="form-label">First Name</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                <input asp-for="FirstName" type="text" class="form-control" placeholder="Enter first name">
                            </div>
                            <span asp-validation-for="FirstName" class="field-validation-error"></span>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label asp-for="LastName" class="form-label">Last Name</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                <input asp-for="LastName" type="text" class="form-control" placeholder="Enter last name">
                            </div>
                            <span asp-validation-for="LastName" class="field-validation-error"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="UserName" class="form-label">Username</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-at"></i></span>
                                <input asp-for="UserName" type="text" class="form-control" placeholder="Enter username">
                            </div>
                            <span asp-validation-for="UserName" class="field-validation-error"></span>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label asp-for="Email" class="form-label">Email</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                <input asp-for="Email" type="email" class="form-control" placeholder="Enter email address">
                            </div>
                            <span asp-validation-for="Email" class="field-validation-error"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                <input id="password" name="password" type="password" class="form-control" placeholder="Enter password">
                            </div>
                            <span class="field-validation-error" data-valmsg-for="password" data-valmsg-replace="true"></span>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="role" class="form-label">Role</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user-tag"></i></span>
                                <select id="role" name="role" class="form-select" asp-items="ViewBag.Roles">
                                    <option value="">Select Role</option>
                                </select>
                            </div>
                            <span class="field-validation-error" data-valmsg-for="role" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                <input asp-for="PhoneNumber" type="tel" class="form-control" placeholder="Enter phone number">
                            </div>
                            <span asp-validation-for="PhoneNumber" class="field-validation-error"></span>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label asp-for="ImgUrl" class="form-label">Profile Image URL</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-image"></i></span>
                                <input asp-for="ImgUrl" type="url" class="form-control" placeholder="Enter image URL">
                            </div>
                            <span asp-validation-for="ImgUrl" class="field-validation-error"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label asp-for="Address" class="form-label">Address</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                <textarea asp-for="Address" class="form-control" placeholder="Enter address" rows="3"></textarea>
                            </div>
                            <span asp-validation-for="Address" class="field-validation-error"></span>
                        </div>
                    </div>

                    <!-- Image Preview -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <label class="form-label">Profile Image Preview</label>
                            <div class="image-preview-container">
                                <img id="imagePreview" src="@Model.ImgUrl" alt="Profile Image Preview" class="img-thumbnail" style="max-height: 200px; display: @(!string.IsNullOrEmpty(Model.ImgUrl) ? "block" : "none")">
                                <div id="noImageMessage" class="text-muted text-center p-3 border rounded" style="display: @(string.IsNullOrEmpty(Model.ImgUrl) ? "block" : "none")">
                                    <i class="fas fa-user fa-2x mb-2"></i>
                                    <p class="mb-0">No profile image preview available</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- User Information Preview -->
                    <div class="card mt-4">
                        <div class="card-header">
                            <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>User Information Preview</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <p><strong>Full Name:</strong> <span id="fullname-preview">@Model.FirstName @Model.LastName</span></p>
                                </div>
                                <div class="col-md-4">
                                    <p><strong>Username:</strong> <span id="username-preview">@Model.UserName</span></p>
                                </div>
                                <div class="col-md-4">
                                    <p><strong>Role:</strong> <span id="role-preview">Not selected</span></p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                        <a href="@Url.Action("Index")" class="btn back-btn me-md-2"><i class="fas fa-times me-2"></i>Cancel</a>
                        <button type="submit" class="btn btn-primary"><i class="fas fa-plus me-2"></i>Create User</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Error Notification -->
@if (ViewContext.ViewData.ModelState.ContainsKey(""))
{
    <div class="alert alert-danger alert-dismissible fade show alert-notification" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        @Html.ValidationSummary(false, "", new { @class = "m-0" })
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-hide alert after 5 seconds
        var alert = document.querySelector('.alert');
        if (alert) {
            setTimeout(function() {
                var bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            }, 5000);
        }

        // Add validation styling
        var forms = document.querySelectorAll('form');
        forms.forEach(function(form) {
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            });
        });

        // Image preview functionality
        const imgUrlInput = document.getElementById('ImgUrl');
        const imagePreview = document.getElementById('imagePreview');
        const noImageMessage = document.getElementById('noImageMessage');

        function updateImagePreview() {
            const imageUrl = imgUrlInput.value;

            if (imageUrl) {
                imagePreview.src = imageUrl;
                imagePreview.style.display = 'block';
                noImageMessage.style.display = 'none';

                // Check if image loads successfully
                imagePreview.onload = function() {
                    imagePreview.style.display = 'block';
                    noImageMessage.style.display = 'none';
                };

                imagePreview.onerror = function() {
                    imagePreview.style.display = 'none';
                    noImageMessage.style.display = 'block';
                    noImageMessage.innerHTML = '<i class="fas fa-exclamation-triangle fa-2x mb-2"></i><p class="mb-0">Invalid image URL</p>';
                };
            } else {
                imagePreview.style.display = 'none';
                noImageMessage.style.display = 'block';
                noImageMessage.innerHTML = '<i class="fas fa-user fa-2x mb-2"></i><p class="mb-0">No profile image preview available</p>';
            }
        }

        if (imgUrlInput) {
            imgUrlInput.addEventListener('input', updateImagePreview);
            // Initialize preview on page load
            updateImagePreview();
        }

        // Update user information preview when form values change
        function updateUserPreview() {
            const firstName = document.getElementById('FirstName').value || '';
            const lastName = document.getElementById('LastName').value || '';
            const username = document.getElementById('UserName').value || '';
            const role = document.getElementById('role').value || '';

            // Update full name
            document.getElementById('fullname-preview').textContent = `${firstName} ${lastName}`.trim() || 'Not specified';

            // Update username
            document.getElementById('username-preview').textContent = username || 'Not specified';

            // Update role
            document.getElementById('role-preview').textContent = role || 'Not selected';
        }

        // Password strength indicator
        function checkPasswordStrength() {
            const password = document.getElementById('password').value;
            const strengthIndicator = document.getElementById('passwordStrength') || createPasswordStrengthIndicator();

            if (password.length === 0) {
                strengthIndicator.style.display = 'none';
                return;
            }

            let strength = 0;
            let feedback = '';

            // Check password length
            if (password.length >= 8) strength += 25;
            if (password.length >= 12) strength += 25;

            // Check for mixed case
            if (/[a-z]/.test(password) && /[A-Z]/.test(password)) strength += 25;

            // Check for numbers and special characters
            if (/\d/.test(password)) strength += 15;
            if (/[^a-zA-Z0-9]/.test(password)) strength += 10;

            // Determine strength level
            let strengthClass = 'bg-danger';
            if (strength >= 60) strengthClass = 'bg-warning';
            if (strength >= 80) strengthClass = 'bg-success';

            strengthIndicator.innerHTML = `
                <div class="progress" style="height: 6px;">
                    <div class="progress-bar ${strengthClass}" style="width: ${strength}%"></div>
                </div>
                <small class="text-muted">Password strength: ${strength}%</small>
            `;
            strengthIndicator.style.display = 'block';
        }

        function createPasswordStrengthIndicator() {
            const indicator = document.createElement('div');
            indicator.id = 'passwordStrength';
            indicator.className = 'mt-2';
            document.getElementById('password').parentNode.appendChild(indicator);
            return indicator;
        }

        // Add event listeners to form elements that affect the preview
        const previewFields = ['FirstName', 'LastName', 'UserName', 'role'];
        previewFields.forEach(function(fieldId) {
            const field = document.getElementById(fieldId);
            if (field) {
                field.addEventListener('input', updateUserPreview);
                field.addEventListener('change', updateUserPreview);
            }
        });

        // Add password strength checking
        const passwordField = document.getElementById('password');
        if (passwordField) {
            passwordField.addEventListener('input', checkPasswordStrength);
        }

        // Initialize preview
        updateUserPreview();
    });
</script>

<style>
    .dashboard-header {
        background: linear-gradient(135deg, #0d47a1 0%, #1976d2 100%);
        color: white;
        padding: 1.5rem 0;
        margin-bottom: 2rem;
        border-radius: 0 0 10px 10px;
    }

    .form-container {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .form-header {
        background: linear-gradient(135deg, #1976d2 0%, #0d47a1 100%);
        color: white;
        border-radius: 10px 10px 0 0;
        padding: 1rem 1.5rem;
        margin: -2rem -2rem 2rem -2rem;
    }

    .form-label {
        font-weight: 600;
        color: #0d47a1;
    }

    .btn-primary {
        background: linear-gradient(135deg, #1976d2 0%, #0d47a1 100%);
        border: none;
        padding: 0.5rem 1.5rem;
        font-weight: 600;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #1565c0 0%, #0d47a1 100%);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .form-control:focus, .form-select:focus {
        border-color: #1976d2;
        box-shadow: 0 0 0 0.25rem rgba(25, 118, 210, 0.25);
    }

    .back-btn {
        background: linear-gradient(135deg, #78909c 0%, #546e7a 100%);
        border: none;
        padding: 0.5rem 1.5rem;
        font-weight: 600;
    }

        .back-btn:hover {
            background: linear-gradient(135deg, #546e7a 0%, #455a64 100%);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .alert-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1050;
        animation: fadeIn 0.5s, fadeOut 0.5s 2.5s;
    }

    .image-preview-container {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        padding: 1rem;
        background-color: #f8f9fa;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
        }

        to {
            opacity: 0;
        }
    }

    .field-validation-error {
        color: #dc3545;
        font-size: 0.875rem;
    }

    .card {
        border: 1px solid rgba(25, 118, 210, 0.2);
        border-radius: 10px;
    }

    .card-header {
        background: rgba(25, 118, 210, 0.1);
        border-bottom: 1px solid rgba(25, 118, 210, 0.2);
    }

    .input-group-text {
        background-color: #f8f9fa;
        border-color: #dee2e6;
    }
</style>